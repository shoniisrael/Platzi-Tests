1.¿Cómo se define la automatización de pruebas?
La práctica de ejecutar pruebas automáticamente, administrar los datos de las pruebas y utilizar los resultados para mejorar la calidad del software. Además de garantizar resultados de prueba exitosos, también garantiza el máximo retorno de la inversión (ROI).

2.No es una de las ventajas de la automatización de pruebas:
Necesitar tecnologías adicionales.

3.¿Por qué el uso de sensores es una limitación a la automatización de pruebas?
Porque es difícil emular el comportamiento de un sensor por código.

4.¿En qué consiste la prueba de humo?
Verifica la función de las características esenciales para asegurarse de que el programa pueda soportar más pruebas.

5.Pueden ser pruebas funcionales o no funcionales y sirven para garantizar que ninguna parte del software haya retrocedido después de realizar los cambios
Pruebas de regresión

6.Pueden ser pruebas funcionales o no funcionales y sirven para buscar vulnerabilidades en la aplicación
Pruebas de seguridad

7.La diferencia entre pruebas de aceptación y pruebas de UI es:
Pruebas de aceptación intentan determinar cómo responderán los usuarios finales al producto final y debe superarse con éxito antes del despliegue a los usuarios finales. Pruebas de UI sirven para garantizar que el producto final con el que interactúan los usuarios funcione como debería.

8.Las pruebas de rendimiento no funcionales evalúan la estabilidad y la capacidad de respuesta de un software.
Verdadero. Además, se aseguran de que el software pueda manejar el estrés y brindar una experiencia de usuario mejor y más confiable.

9.¿Por qué utilizamos frameworks?
Permite estandarizar el proceso de automatización de pruebas.

10.Si tu producto cambia con mucha frecuencia sus interfaces y APIs, los scripts de captura y reproducción son una buena opción de framework de automatización.
Falso

11.Si tu producto es muy grande y tiene muchos pasos y acciones, el linear scripting es una buena opción de framework de automatización. Esto es:
Falso. Una opción es usar Structured Scripting una vez que permite utilizar scripts que ya existen en lugar de tener que crearlos desde cero.

12.¿Es posible combinar más de un framework de automatización para el desarrollo de la automatización?
Sí, puedes usar las bondades de cada framework y hacer uno que se adapte a tus necesidades y crear un framework híbrido .

13.La reutilización de código es una ventaja presente en varios frameworks, expecto:
Linear scripting

14.Una de las caracteristicas del framework Behavior Driven Development es:
Te permite usar lenguaje natural y hacer uso de palabras reservadas como Given, When, y Then para describir las precondiciones el disparador y el criterio de aceptación.

15.¿Qué es lo que alimenta el análisis del ciclo de Test Automation?
El diseño del sistema que se está desarrollando.

16.¿Qué es necesario que esté terminado para poder entrar a la fase de "Test" del sistema que se está desarrollando?
El despliegue de la Automatización y del equipo de Manual Testing.

17.¿Por qué la agilidad y la productividad son algunos de los beneficios de tener automatización de pruebas en CI/CD?
Porque permite que los desarrolladores esperen menos tiempo por los resultados de las pruebas y dediquen más tiempo a corregir errores si los hay.

18.¿Cuál es una desventaja de implementar la automatización de pruebas en tu flujo de CI/CD?
No hay desventajas

19.Son ejemplos de herramientas de prueba de navegadores:
Selenium y Puppeteer

20.Jmeter y Gatling son ejemplos de herramientas de pruebas:
De performance
